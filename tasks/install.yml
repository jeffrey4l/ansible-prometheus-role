---
- name: ensure folder
  file:
    path: "{{ prometheus_bin_path }}"
    state: directory

- name: check prometheus stat
  stat:
    path: "{{ prometheus_bin_path }}/prometheus"
  register: check_prometheus

- name: check prometheus version
  command: "{{ prometheus_bin_path }}/prometheus --version"
  register: check_prometheus_version
  changed_when: false
  when:
    - check_prometheus.stat.exists

- name: get current prometheus version
  set_fact:
    cur_prometheus_version: "{{ check_prometheus_version.stderr|regex_findall('^prometheus, version ([^ ]+)') }}"
  when:
    - check_prometheus.stat.exists
    - check_prometheus_version is success

- name: Download prometheus packages remotely
  get_url:
    url: "{{ prometheus_download_url }}"
    dest: /tmp/{{ prometheus_filename }}
    checksum: "{{ prometheus_checksum }}"
  register: download_prometheus
  when:
    - cur_prometheus_version|default('0') != prometheus_version
    - download_mode == 'remote'

- name: Download prometheus packages locally
  get_url:
    url: "{{ prometheus_download_url }}"
    dest: /tmp/{{ prometheus_filename }}
    checksum: "{{ prometheus_checksum }}"
  run_once: true
  delegate_to: localhost
  register: download_prometheus
  when:
    - cur_prometheus_version|default('0') != prometheus_version
    - download_mode == 'locally'

- name: unpack the package
  unarchive:
    src: /tmp/{{ prometheus_filename }}
    dest: /opt/prometheus
    owner: root
    group: root
    remote_src: "{{ true if download_mode == 'remote' else false  }}"
    extra_opts:
      - --strip-components=1
  when:
    - cur_prometheus_version|default('0') != prometheus_version
